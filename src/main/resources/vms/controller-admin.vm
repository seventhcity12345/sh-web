##小写
#set($entityname=$EntityName.toLowerCase())
#set($length=$EntityName.length())
##首字母小写
#set($entityName=$EntityName.substring(0,1).toLowerCase()+$EntityName.substring(1,$length))
package com.${companyName}.${projectName}.${entityname}.controller;

import java.util.Map;
import java.util.HashMap;
import java.util.Date;
import java.util.List;
import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import com.mingyisoft.javabase.util.RequestUtil;
import com.mingyisoft.javabase.bean.JsonMessage;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;  
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody; 
import org.springframework.web.bind.annotation.PathVariable;

import com.mingyisoft.javabase.bean.Page;
import com.${companyName}.${projectName}.${entityname}.service.Admin${EntityName}Service;
import org.apache.log4j.Logger;

/**
 * @category ${entityName}控制类
 * @author mingyisoft代码生成工具
 *
 */
@Controller
@RequestMapping("/admin/${entityName}")
public class Admin${EntityName}Controller {
	private static Logger logger = Logger.getLogger(Admin${EntityName}Controller.class);

	@Resource
	private Admin${EntityName}Service admin${EntityName}Service;
	
	/**
	 * @category ${entityName}后台管理主页面
	 * @author mingyisoft代码生成工具
	 * @param model
	 * @return
	 */
	@RequestMapping("/index")
	public String index(Model model) {
		return "admin/${entityName}/admin_${entityname}";
	} 
	
	
	/**
	 * @category ${entityName}保存
	 * @author mingyisoft代码生成工具
	 * @param request
	 * @param model
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@SuppressWarnings("rawtypes")
	@RequestMapping("/save")
	public JsonMessage save(HttpServletRequest request,ModelMap model) throws Exception{
		Map adminUserMap = RequestUtil.getSessionAdminUserMap(request);
		Map paramMap = RequestUtil.getParameterMap(request); 
		
		if(paramMap.get("key_id")!=null&&!"".equals(paramMap.get("key_id"))){//修改
			paramMap.put("update_date", new Date());
			paramMap.put("update_user_id", adminUserMap.get("key_id"));
			admin${EntityName}Service.update(paramMap);
		}else{//新增  
		  paramMap.put("create_date", new Date());
			paramMap.put("create_user_id", adminUserMap.get("key_id"));
			admin${EntityName}Service.insert(paramMap);
		}
		
		return new JsonMessage();
	}
	 
	
	/**
	 * @category ${entityName}查询数据列表(带分页)
	 * @author mingyisoft代码生成工具
	 * @param page
	 * @param rows
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("/pagelist")
	public Map<String, Object> pagelist(HttpServletRequest request) throws Exception{
		Map<String, Object> responseMap = new HashMap<String, Object>();
		
		Page p = admin${EntityName}Service.findPageEasyui(RequestUtil.getParameterMap(request),"*");
		responseMap.put("total", p.getTotalCount());
		responseMap.put("rows", p.getDatas());
		
		return responseMap;
	} 
	
	/**
	 * @category ${entityName}查询数据列表(不带分页)
	 * @author mingyisoft代码生成工具
	 * @param page
	 * @param rows
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("/list") 
	public JsonMessage list(HttpServletRequest request) throws Exception{
		JsonMessage json = new JsonMessage();
		try {
			json.setData(admin${EntityName}Service.findList(RequestUtil.getParameterMap(request),"*"));
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("error:" + e.getMessage(), e);
			json.setSuccess(false);
			json.setMsg("系统出现异常!");
		}
		return json;
	} 
	
	
	/**
	 * @category 适用于easyui下拉框
	 * @author mingyisoft代码生成工具
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("/selectlist")
	public List<Map<String, Object>> selectlist(HttpServletRequest request) throws Exception{
		return admin${EntityName}Service.findList(RequestUtil.getParameterMap(request),"*");
	} 
	
	/**
	 * @category 通过ID查询数据
	 * @author mingyisoft代码生成工具
	 * @param id
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("/get")
	public Map<String,Object> get(HttpServletRequest request) throws Exception {
		return admin${EntityName}Service.findOne(RequestUtil.getParameterMap(request),"*");
	}
	
	/**
	 * @category 通过ID查询数据
	 * @author mingyisoft代码生成工具
	 * @param id
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("/getJsonObj")
	public JsonMessage getJsonObj(HttpServletRequest request) throws Exception {
		JsonMessage json = new JsonMessage();
		
		try {
			json.setData(admin${EntityName}Service.findOne(RequestUtil.getParameterMap(request),"*"));
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("error:" + e.getMessage(), e);
			json.setSuccess(false);
			json.setMsg("系统出现异常!");
		}
		
		return json;
	}
	
	/**
	 * @category 通过ID删除数据
	 * @author mingyisoft代码生成工具
	 * @param id
	 * @return
	 */
	@RequestMapping("/delete")
	@ResponseBody
	public JsonMessage delete(String ids) throws Exception{
		admin${EntityName}Service.delete(ids);
		return new JsonMessage();
	} 
	
	
	/**
	 * @category 查看详细信息
	 * @author mingyisoft代码生成工具
	 * @param id
	 * @return
	 */
	@RequestMapping("/detail/{keyId}")
	public String detail(Model model, @PathVariable(value = "keyId") String keyId) throws Exception {
		model.addAttribute("obj", admin${EntityName}Service.findOneByKeyId(keyId,"*"));
		// 访问地址为 localhost:8080/hwj/demo/detail/主键
		// jsp路径为 hwj\src\main\webapp\WEB-INF\jsp\demo\demo_detail.jsp
		return "admin/admin_${entityname}_detail";
	}
}

