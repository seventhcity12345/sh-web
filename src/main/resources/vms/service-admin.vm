#set($length=$EntityName.length())
##首字母小写
#set($entityName=$EntityName.substring(0,1).toLowerCase()+$EntityName.substring(1,$length)) 
package com.${companyName}.${projectName}.${entityname}.service;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import java.util.Map;
import java.util.List;

import com.mingyisoft.javabase.bean.Page;
import org.apache.log4j.Logger;
import com.${companyName}.${projectName}.${entityname}.dao.Admin${EntityName}Dao;

@Service
@Transactional(propagation = Propagation.NOT_SUPPORTED)
//@Transactional(propagation = Propagation.REQUIRED, isolation = Isolation.SERIALIZABLE)
public class Admin${EntityName}Service {
	private static Logger logger = Logger.getLogger(Admin${EntityName}Service.class);
	@Resource
	Admin${EntityName}Dao admin${EntityName}Dao;
	
	/**
	 * @category ${entityName} 插入
	 * @author mingyisoft代码生成工具
	 * @param fields
	 * @return
	 * @throws Exception
	 */
	public Map<String, Object> insert(Map<String, Object> fields) throws Exception{
		return admin${EntityName}Dao.insert(fields);
	} 
	
	/**
	 * @category 通用查询数据方法(不带分页+dao自动生成sql)
	 * @author mingyisoft代码生成工具
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	public List<Map<String,Object>> findListEasyui(Map<String, Object> paramMap,String columnName) throws Exception{
		return admin${EntityName}Dao.findListEasyui(paramMap,columnName);
	}
	
	/**
	 * @category 通用查询数据方法(不带分页+dao自动生成sql)
	 * @author mingyisoft代码生成工具
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	public List<Map<String,Object>> findList(Map<String, Object> paramMap,String columnName) throws Exception{
		return admin${EntityName}Dao.findList(paramMap,columnName);
	}
	
	
	/**
	 * @category 通用查询数据方法(分页+dao自动生成sql)
	 * @author mingyisoft代码生成工具
	 * @param paramMap
	 *            参数map
	 * @param pageNumber
	 *            当前页数
	 * @param pageSize
	 *            每页显示多少条数据
	 * @return
	 * @throws Exception
	 */
	public Page findPage(Map<String, Object> paramMap,String columnName) throws Exception{
		return admin${EntityName}Dao.findPage(paramMap,columnName);
	}
	
	/**
	 * @category 通用查询数据方法(分页+dao自动生成sql)
	 * @author mingyisoft代码生成工具
	 * @param paramMap
	 *            参数map
	 * @param pageNumber
	 *            当前页数
	 * @param pageSize
	 *            每页显示多少条数据
	 * @return
	 * @throws Exception
	 */
	public Page findPageEasyui(Map<String, Object> paramMap,String columnName) throws Exception{
		return admin${EntityName}Dao.findPageEasyui(columnName,paramMap);
	}
	 
	
	/**
	 * @category 修改数据 
	 * @author mingyisoft代码生成工具
	 * @return
	 */
	public int update(Map<String, Object> fields) throws Exception{
		return admin${EntityName}Dao.update(fields);
	}
	
	/**
	 * @category 查询单条数据(通过参数MAP)
	 * @author mingyisoft代码生成工具
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	public Map<String, Object> findOne(Map<String,Object> paramMap,String columnName) throws Exception{
		return admin${EntityName}Dao.findOne(paramMap,columnName);
	}
	
	/**
	 * @category 查询单条数据(通过key,value)
	 * @author mingyisoft代码生成工具
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	public Map<String, Object> findOne(String key,String value,String columnName) throws Exception{
		return admin${EntityName}Dao.findOne(key,value,columnName);
	}
	
	/**
	 * @category 查询单条数据(通过主键)
	 * @author mingyisoft代码生成工具
	 * @param paramMap
	 * @return
	 * @throws Exception
	 */
	public Map<String, Object> findOneByKeyId(Object param,String columnName) throws Exception{
		return admin${EntityName}Dao.findOneByKeyId(param,columnName);
	}
	
	/**
	 * @category 按照ID数组批量删除数据
	 * @author mingyisoft代码生成工具
	 * @param id
	 * @return
	 */
	public int delete(String ids) throws Exception{
		return admin${EntityName}Dao.delete(ids);
	}
	
	/**
	 * @category 查询数量
	 * @author mingyisoft代码生成工具
	 * @param sql
	 * @param map
	 * @return
	 * @throws Exception
	 */
	public int findCount(Map<String,Object> map) throws Exception{
		return admin${EntityName}Dao.findCount(map);
	}
	
	/**
	 * @category 查询总数
	 * @author mingyisoft代码生成工具
	 * @param map 
	 * @param sumField sum的字段
	 * @return
	 * @throws Exception
	 */
	public int findSum(Map<String,Object> map,String sumField) throws Exception{
		return admin${EntityName}Dao.findSum(map, sumField);
	}
} 